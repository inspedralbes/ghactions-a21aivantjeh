name: Despliegue automático con GitHub Actions
run-name: Subida a producción de la aplicación

on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Obtener el código del repositorio
        uses: actions/checkout@v4
        
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Limpiar e instalar dependencias
        run: |
          cd front
          rm -rf node_modules
          npm install # Reinstalar dependencias para evitar conflictos

      - name: Configurar variable de entorno para LightningCSS
        run: echo "CSS_TRANSFORMER_WASM=1" >> $GITHUB_ENV

      - name: Construir aplicación
        run: |
          cd front
          npm run build

      - name: Verificar resultado de la build
        run: ls -la front/dist || echo "⚠️ ¡Directorio 'dist' no existe!"

      - uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: front/dist

  desplegar-a-produccion:
    runs-on: ubuntu-latest
    needs: [build-and-deploy]

    steps:
      - name: Obtener el código del repositorio
        uses: actions/checkout@v4

      - name: Descargar el artifact construido
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: dist

      - name: Verificar contenido del directorio descargado
        run: ls -la dist || echo "⚠️ ¡No se ha descargado nada en 'dist'!"

      - name: Desplegar a producción con SCP
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem
          scp -r -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i "~/prod_key.pem" dist/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_DIR }}

      - run: echo "🍏 El estado de este job es ${{ job.status }}."