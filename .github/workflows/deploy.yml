name: Preparant per producci√≥
run-name: ${{ github.actor }} est√† pujant l'aplicaci√≥ a PROD üöÄ

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout del repositori
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì¶ Instal¬∑lar depend√®ncies i construir
        run: |
          cd front
          npm install
          npm rebuild lightningcss
          npm run build

      - name: üìÅ Comprovar que existeix 'dist'
        run: ls -la front/dist || echo "‚ö†Ô∏è El directori 'dist' no existeix!"

      - name: ‚òÅÔ∏è Pujar artefacte build
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: front/dist

  pujar-a-produccio-amb-scp:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: üîÑ Checkout del repositori
        uses: actions/checkout@v4

      - name: üì• Descarregar build constru√Øt
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: dist

      - name: üìÅ Verificar contingut del directori 'dist'
        run: ls -la dist || echo "‚ö†Ô∏è No s'ha descarregat res a 'dist'!"

      - name: üöÄ Desplegar a producci√≥ amb SCP
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem
          scp -r -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
              -i ~/prod_key.pem dist/* \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_DIR }}

      - name: ‚úÖ Estat del job
        run: echo "üçè Estat del job ${{ job.status }}"